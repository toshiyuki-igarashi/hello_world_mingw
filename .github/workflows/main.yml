# This is a basic workflow to help you get started with Actions

name: MinGW

# Controls when the action will run. Triggers the workflow on push or pull request
# events
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2019
    # set environment variables
    env:
      MSYSTEM: MINGW64
      MSYSTEM_PREFIX: /mingw64
      MSYS2_ARCH: x86_64
      CHOST: "x86_64-w64-mingw32"
      CFLAGS:   "-march=x86-64 -mtune=generic -O3 -pipe -fstack-protector-strong"
      CXXFLAGS: "-march=x86-64 -mtune=generic -O3 -pipe"
      CPPFLAGS: "-D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -DFD_SETSIZE=2048"
      LDFLAGS:  "-pipe -fstack-protector-strong"
      UPDATE_UNICODE: "UNICODE_FILES=. UNICODE_PROPERTY_FILES=. UNICODE_AUXILIARY_FILES=. UNICODE_EMOJI_FILES=."

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # check installed packages
    - run: pacman -Ql
      
    # setup msys2 for install autotools
    - uses: numworks/setup-msys2@v1
    - run: msys2do uname -a
    - run: msys2do pacman --noconfirm -S automake autoconf 
    - run: msys2do pacman --noconfirm -S base-devel
    - run: msys2do pacman --noconfirm -S mingw-w64-x86_64-toolchain
    - run: msys2do pacman -Ql automake autoconf
    - run: msys2do ls -l /usr/bin
    - run: msys2do autoreconf -fi
    - run: msys2do ./configure
    - run: msys2do make
    - run: msys2do ./hello
